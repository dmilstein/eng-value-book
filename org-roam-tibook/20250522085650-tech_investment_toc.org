:PROPERTIES:
:ID:       B4926308-39DD-471B-8E71-5FFF7546D6E3
:END:
#+title: Tech Investment ToC
A place to take notes / work on a table of contents. Don't forget I sketched in a set of [[id:72DCBC9C-C4D0-43FD-8CAD-F58302285461][Tech Debt Sub-Posts]]

* Notes on what robfitz says in [[id:27BF5BDA-3A83-49FA-A73F-9BA26EF096B9][Write Useful Books]]

Develop a skeleton/outline focused on *learning outcomes*. If a section has multiple such, map out sub sections.

Don't aim for being cute or fun in the headlines (yet), and let them be a bit talky and long.

Imagine someone reading them and, if they don't know this area, saying "Oh, man, I've gotta read that" or if they *do* know it saying "Okay, he's covering x, y, z, I can skip that chapter or skim it, oh hey I wonder what he means by 'w', I'll dip into that".

Don't worry about consistency in length of titles -- think of this is a testable framework, not an elegant ToC that has to read well (yet).

* Random Thinking

I think defining the problem and pain early, and then doing the following two things, in some order:

 - A very concise definition of the overall gameplan (ah-hah = "Oh, that's interesting. That's seeing it at a slight angle. I want to learn more.")

 - An example that brings that gameplan to life (ah-hah = "Oh, man, I want that. And it actually makes sense/is believable").

How early do I lean into the problems with Tech Debt?


* Edmund Notes
D,

I read through this, I have 3 snap reactions (these are basically stream of consciousness, caveat lector):
This will be a good book
Something that I feel might be missing in this organization / framing (or maybe even it's just the titles) is the really human angle that I feel like you've mentioned elsewhere in this discussion--e.g. I wonder if reframing "balancing tech & product is hard," which is already an implicitly economic framing, as "Your engineers are screaming at you for time to work on tech stuff and your PM is screaming at you because they need those features right now" might not be a more visceral & effective way of validating for your target market that yes, you have named their problem.  I recall you using this framing at some point, and I liked it.  I suspect most people who aren't you and me are not really depersonalizing this out of the gate, so I think it just broadens your target market.  Also, from a non-marketing POV, in one sense, *everyone* in the business is a stakeholder if you're in this job, your own engineers included, and doing the job well requires an economic theory of software that you are able to actually execute through a respect for human nature and personal interactions, so playing up the personal aspect more centrally feels good to me.  This also lets you say--again, even in headings--that, before you can talk about the most effective ways to deal with stakeholders putting up with tech investments, you actually have to be thinking of the tech problem in the right way, so it makes the "stakeholder management" placement near the end feel appropriate, even if it's the part the reader is most worried about.  Like, you can say "Look, you've got to learn to think about this right, otherwise all the charm in the world will only delay your eventual firing halfway through a massive, doomed-to-failure rewrite of some kind."  So you get a kind of structure of validating the human aspects of the pain, promising that to fix them requires "stakeholder management," yes, but you have to be managing them towards something that's actually got the chance to be successful, so let's focus on that first.  Great, now that we've understood technical investments in a way that makes them more likely to succeed, I've got bad and good news--the bad news is, this structure is even harder for your stakeholders to understand natively than, like, some waterfall chart and a request for six months of no feature work.  The good news is, it might actually work, and you *can* learn to exploit the inherent strengths of the proper technical investment (fast turnaround / value increments, visibility, etc.) as a way to build trust.
I wonder if swapping the tech debt & tech investment section could be powerful in the intro?  E.g. "Eng screaming about tech debt, product about features.  Ok, first of all--tech debt is the wrong term, has outlived its usefulness.  Tech *investments* are where it's at.  I'll teach you how to think about them right, get your eng to do them right, and involve your stakeholders along the way so they're cheering.  Here's the basic outline.  Then, I'll teach you how to make this durable and repeatable in your company."
I have a couple potential tweaks for some of the heading names, too, FWIW.

E.g. "Tech Investments and the Engineering Organization" could potentially be reframed as some sort of "making these durable?"

"Working with stakeholders" could be "How to make your stakeholders fans of technical investments" or "how to addict your stakehoders to technical investments" or something along those lines.

I might jot down some others.

* Draft ToC
** Intro Section
*** Intro Chapter
**** Stakeholders Scream About Features, the Team Screams About Tech Debt: The Joy of Engineering Leadership
# Statement of empathy, touching on a bunch of the human experience + potential failure modes.
**** Why the "Tech Debt" Metaphor Has Become Limiting
# Sketch in the key problems (focus on "bad code", offers nothing positive to your product or stakeholder peers, don't go too deep on moral vs economic)
**** A Better Way: Technical Investments
# Give the definition
**** What If My Stakeholders Don't Care About Engineering?
**** What If My Engineers Don't Care About the Business?
# Aka, what if my very senior engineer just wants to rewrite everything?
**** What's Coming In the Rest of the Book
** Part I: The Tech Investment Cycle
*** The Fundamental Cycle
# Basically just name each of these, will go deeper in later chapter.

# Emphasize that you do this over and over, deliberately starting with small scale, and gradually "levering up" to larger investments.
**** Find things engineers are *worried about*
**** Convert each into a statement of *potential value*
**** Select the highest value option, based on what is *currently known*
**** *Build visibility* into current state
# In a way which will show the improvement, if/when you make it
**** Identify a *small increment* that will improve things and/or create more visibility
**** Share visibility with stakeholders to *motivate investment*
**** Offer an *incremental option* to stakeholder, get buy-in
**** Do The Thing
**** Celebrate improvements via *story-telling*
**** Return to Step 1, with more *capital and trust*

*** What the Tech Investment Cycle Looks and Feels Like
# Go through an example of a few loops in sequence (meaning, for the same scenario), levering up from on-the-side visibility building to a full-ish investment. [Take the thing I have and break it into even smaller steps, and move some of the potential value things out of it].
*** The Central Hack: Build Visibility First
# Maybe: why visibility not metrics? or "measurement"
# Throw in some ideas from how to measure anything
*** Value = More Quickly Figuring Out What To Do Next
# As my shrunk down form of the full information-as-value story
# Oooh, maybe I can use both my metaphors of Bad estimates are like having a contractor offer to burn your house down + the difference between planning a trip w/ milestones on roads vs exploring an undiscovered country (or alient planet)
#
# Maybe around here, do the super condensed Cliff's Notes form of value ala:
#
#  - The vast majority of time, we only truly know what we're going to do next once we finish what we're currently doing
#  - It's an exploration, not a planned itinerary
#  - Value comes both from building, but also from more rapidly figuring out the next thing to do
*** A Buffet of Some Different Forms of Value
# For each, sketch in ideas on building visibility (and maybe actually do a bit of 1 -> 2 -> 3, viz -> commitment -> more viz -> more commitment
**** Speed Up The Build/Ship/Learn Cycle (Not Just The Build Part)
**** Ship Smaller Changes More Often
# aka, use Accelerate as teaching instrument/bludgeon
**** Enable (Specific) Upcoming Product Improvements
**** Reduce Steady-State Maintenance Work
**** Reduce Interruptive Maintenance Work
**** Enable Parallel Development Across Multiple Teams
**** Reduce Risk of Losing Customers Thanks to Losing Their Data
**** Reduce Risk of (Expensive) Outages
**** Reduce Duration of (Expensive) Outages
**** Reduce Risk of (Very Expensive) Security Breaches
**** Ensure Many Customers Can Use System At Once Without It Collapsing
# Aka, Load & Scale
**** Ensure "Big" Customers Can Use System In "Big" Ways Without It Collapsing
**** Reduce Costs Of Serving Customers (But, See: Drunk, Lamppost)
# See: drunk, lamppost issues.

*** Engineer Complaints: When To Act On vs When to +Ignore+ Express Sympathy
*** Develop Incremental Options: Small Steps Are The Only Steps Allowed
# aka No, Really, It *Can* Be Done In Small Steps
**** The Full Rewrite: Only Undertake If You Wish To Be Fired Midway Through a Long, Painful & Ultimately Unsuccessful Death March
*** Stakeholders Have Feelings, Too: How To Advocate Effectively
**** Lead With Empathy In Order To Generate Commitment
**** Six Ineffective Ways to Advocate Before Breakfast
**** Work Backward From a Future Collaborative Decision
**** Use the Dark Force of "Metrics" In Your Favor
# Talk SLI's here? Or go deep in one of my examples/war stories and reference here?
*** Use Storytelling to Celebrate Your Wins
** Part II: Scaling Up: Tech Investments & the Engineering Organization
*** Addict Your Stakeholders to a Steady Habit of Decision-Making
# Move to Part II?
*** Make Your Post-Mortems an Act of Visibility
*** Assign Ownership to Align Costs With Benefits
*** 5 Scopes: On the Side, Ticket, Project, Initiative, Durable Team
# Tease apart tiger teams vs cross-team initiatives
*** Technical Stewardship: Weaving Tech Investments Into The Career Ladder
** Part III: Advanced Topics For Advanced People
*** How Engineers Actually Create Value And Why Almost No One Understands It
**** OMG If Someone Says "Productivity" One More Time I Will Not Be Responsible For My Actions
*** The Moral Mindset: A Powerful But Dangerous Widget of the Human Mind
*** War Stories / Case Studies
**** Pinch Tests
**** EWJ's DevPlats Work
**** Inventory Variance
**** TRNS Criticals
**** Couchbase or ElasticSearch Retirement
**** SLI's & SLO's
**** Load Testing Parent Letters
**** Assignment Paradigm?
**** Flex Fields?
